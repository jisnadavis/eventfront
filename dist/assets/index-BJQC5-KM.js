(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function a(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(o){if(o.ep)return;o.ep=!0;const i=a(o);fetch(o.href,i)}})();const L=(r,e)=>{const a=document.createElement("button");return a.textContent=r,a.className=r,e.append(a),a},T=r=>{const e=document.querySelector("#app");e.innerHTML="";const a=document.createElement("div");a.innerHTML=`
    <form id="updateForm">
      <input type="text" id="phoneNumber" name="phoneNumber" placeholder="Enter your phone number" pattern="[0-9{5,10}" minlength="5" maxlength="10" required>
      <input type="text" name="name" placeholder="Enter your name" required>
      <input type="email" name="emailId" placeholder="Enter your email" required>
      <input type="hidden" name="eventId" value="${r}">
      <button type="submit">Update</button>
    </form>
    <div id="messageContainer"></div>
  `,e.append(a);const t=document.querySelector("#updateForm"),o=t.querySelector("#phoneNumber"),i=document.querySelector("#messageContainer");o.addEventListener("input",()=>{o.value.length>10&&(o.value=o.value.slice(0,10))}),t.addEventListener("submit",async n=>{n.preventDefault(),await k(t,i)})},k=async(r,e)=>{const a=new FormData(r),t=Object.fromEntries(a.entries()),o=JSON.stringify(t);console.log("Sending data:",o);const i={method:"PUT",body:o,headers:{"Content-Type":"application/json"}},n=await fetch(`http://localhost:3000/api/v1/attende/${t.phoneNumber}`,i),s=await n.json();if(console.log(s.name),e.innerHTML="",console.log("Response status:",n.status),n.status===404){const d=document.createElement("p");d.classList.add("error"),d.textContent="The phone number is not registered.",d.style.color="red",e.appendChild(d);return}if(n.status===400){const d=await n.json();console.error("Error data:",d);const l=document.createElement("p");l.classList.add("error"),l.textContent="Bad request. Please check your data.",l.style.color="red",e.appendChild(l);return}console.log("Response data:",s);const c=document.createElement("p");c.className="messageCustomer",c.textContent="You have updated your details.",e.appendChild(c)},I=r=>{const e=document.querySelector("#app");e.innerHTML="";const a=document.createElement("div");a.className="registerdiv",a.innerHTML=`
    <form id="registerFormcustomer">
     
     <input type="text" name="name" placeholder="Enter your name" required>
      <input type="text" name="emailId" placeholder="Enter your emailid" required>
      <input type="number" id="phoneNumber" name="phoneNumber" placeholder="Enter your phone number" pattern="[0-9]{10}" maxlength="10" required>
      <input type="hidden" name="eventId" value="${r}">
      <button type="submit" class="register">Register</button>
    </form>
    <div id="messageContainer"></div>
  `,e.append(a);const t=document.querySelector("#registerFormcustomer"),o=t.querySelector("#phoneNumber");o.addEventListener("input",()=>{o.value.length>10&&(o.value=o.value.slice(0,10))}),t.addEventListener("submit",async i=>{i.preventDefault(),await j(t,r)})},j=async(r,e)=>{const a="update",t=new FormData(r),o=Object.fromEntries(t.entries()),n={method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json"}},s=await fetch("http://localhost:3000/api/v1/attende/",n),c=document.querySelector("#messageContainer");if(c.innerHTML="",s.status===400){const p=document.createElement("p");p.classList.add("error"),p.textContent="The phone number is already registered. If you want to make any changes, please click on the update button.",p.style.color="red",c.appendChild(p);const m=L(a,c);m?m.addEventListener("click",()=>{T(e)}):console.error("createbutton did not return a valid button element");return}const d=await s.json(),l=document.createElement("p");l.className="messageCustomer",l.textContent="You have successfully joined the party, "+d.name+" .need any change  please click updatebutton",c.appendChild(l);const u=L(a,c);u?u.addEventListener("click",()=>{T(e)}):console.error("createbutton did not return a valid button element")},H=async()=>{const r=document.querySelector("#app");r.innerHTML="";const a=await(await fetch("http://localhost:3000/api/v1/events/")).json();F(a,r)},F=(r,e)=>{const a=document.createElement("div");a.className="eventdiv";for(const t of r){const o=document.createElement("div");o.className="par_event";const i=document.createElement("img");i.src=t.eventimg,o.appendChild(i);const n=document.createElement("div");n.className="description";const s=document.createElement("h2");s.textContent=t.title;const c=document.createElement("h3"),d=t.date.split("T")[0];c.textContent=d;const l=document.createElement("h4");l.textContent=t.location;const u=document.createElement("p");u.textContent=t.description,n.appendChild(s),n.appendChild(c),n.appendChild(l),n.appendChild(u);const p=document.createElement("button");p.className="join",p.textContent="join",o.appendChild(n),n.appendChild(p),a.appendChild(o),p.addEventListener("click",()=>I(t._id))}e.appendChild(a)},N=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="home";const a=document.createElement("h1");a.className="tittle",a.textContent="We don't remember days; we remember moments! Come and enjoy.";const t=document.createElement("div");t.className="imagediv",e.appendChild(a),e.appendChild(t),r.append(e)},M=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="deleteattende";const a=document.createElement("p");a.textContent="Attendees registered for the event",e.appendChild(a);const t=async()=>{const n={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}};try{const c=await(await fetch("http://localhost:3000/api/v1/attende/",n)).json();if(c.length===0){alert("Nobody registered for the event");return}const d=document.createElement("ul");for(const l of c){const u=document.createElement("div"),p=document.createElement("li");p.textContent=l.name;const m=document.createElement("button");m.textContent="Delete",m.onclick=async()=>{await o(l._id),e.innerHTML="",t()},u.appendChild(p),u.appendChild(m),d.appendChild(u)}e.appendChild(d)}catch(s){console.error("Error fetching attendees:",s),alert("Error fetching attendees")}},o=async i=>{const s={method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}};try{console.log(`Attempting to delete attendee with ID: ${i}`);const c=await fetch(`http://localhost:3000/api/v1/attende/${i}`,s);if(c.status===200)alert("Attendee deleted successfully");else if(c.status===403){const d=await c.json();console.error("Unauthorized access:",d),alert("Unauthorized: You do not have permission to delete this attendee")}else if(c.status===404){const d=await c.json();console.error("Attendee not found:",d),alert("Attendee not found")}else{const d=await c.json();console.error("Error deleting attendee:",d),alert(`Error deleting attendee: ${d.message||c.statusText}`)}}catch(c){console.error("Network error:",c),alert("Network error occurred while deleting attendee")}};t(),r.append(e)},B=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");(async t=>{var l;localStorage.getItem("user");const i={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}},n=await fetch("http://localhost:3000/api/v1/attende/",i);t.innerHTML="";const s=document.createElement("div");s.className="errordiv";const c=document.createElement("p");if(s.appendChild(c),t.append(s),n.status===401){c.textContent="You are not an organizer";return}const d=await n.json();if(s.innerHTML="",d.length==0&&alert("there is nobody registerd for the event"),n.status===200){const u=document.createElement("ul");for(const p of d){const m=document.createElement("li"),h=((l=p.eventId[0])==null?void 0:l.title)||"No event title";m.textContent=`The attendee confirmed: ${p.name}   for the event :  ${h}`,u.appendChild(m)}s.appendChild(u)}})(r),r.appendChild(e)},z=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.innerHTML=`
    <form id="eventForm">
       <label for="title">Title:</label>
  <input type="text" id="title" name="title" required placeholder="Enter event title">

  <label for="date">Date:</label>
  <input type="date" id="date" name="date" required placeholder="yyyy-mm-dd">

  <label for="location">Location:</label>
  <input type="text" id="location" name="location" required placeholder="Enter event location">

  <label for="description">Description:</label>
  <textarea id="description" name="description" required placeholder="Enter event description"></textarea>

  <label for="eventimg">Event Images:</label>
  <input type="file" id="eventimg" name="eventimg" multiple required placeholder="Upload event images">

     


      <label for="eventorganizer">Event Organizer:</label>
      <input type="text" id="eventorganizer" name="eventorganizer"  class="hidden-input" readonly value="${JSON.parse(localStorage.getItem("user")).id}">

      <button type="submit" id="submitEventButton">Submit</button>
    </form>
    <div id="messageevent"></div>
  `,r.append(e);const a=document.querySelector("#eventForm"),t=document.querySelector("#messageevent");a.addEventListener("submit",o=>{o.preventDefault();const n=document.getElementById("date").value;if(!/^\d{4}-\d{2}-\d{2}$/.test(n)){alert("Date must be in yyyy-mm-dd format.");return}A(a,t)})},A=async(r,e)=>{const a=new FormData(r),t=localStorage.getItem("token"),o=JSON.parse(localStorage.getItem("user")).id;a.set("eventorganizer",o);const i={method:"POST",body:a,headers:{Authorization:`Bearer ${t}`}};try{const n=await fetch("http://localhost:3000/api/v1/events/",i);if(e.innerHTML="",console.log("Response status:",n.status),n.status===400){const d=await n.json();console.error("Error data:",d);const l=document.createElement("p");l.classList.add("error"),l.textContent="Bad request. Please check your data. Unable to create the event",l.style.color="red",e.appendChild(l);return}const s=await n.json();console.log("Response data:",s);const c=document.createElement("p");c.className="messageCustomer",c.textContent=`You have successfully created the event: ${s.title}`,e.appendChild(c)}catch(n){console.error("Error:",n);const s=document.createElement("p");s.classList.add("error"),s.textContent="An error occurred while creating the event.",s.style.color="red",e.appendChild(s)}},P=()=>{const r=localStorage.getItem("token"),e=document.querySelector("#app");e.innerHTML="";const a=document.createElement("div");a.className="deleteevent";const t=async()=>{try{const s=await(await fetch("http://localhost:3000/api/v1/events/")).json(),c=document.createElement("div");c.id="listevent";const d=document.createElement("ul");s.forEach(l=>{const u=document.createElement("li");u.textContent=l.title,u.dataset.id=l._id,u.addEventListener("click",()=>{o(l._id,l)}),d.appendChild(u)}),c.appendChild(d),a.append(c)}catch(n){console.error("Error fetching events:",n.message),a.innerHTML="Failed to load events."}},o=async(n,s)=>{a.innerHTML="";const c=document.createElement("p");c.textContent=`You have selected the event: ${s.title}. If you want to delete the event, please click on the delete button.`;const d=document.createElement("button");d.textContent="Delete",a.append(c),a.append(d),d.addEventListener("click",l=>{l.preventDefault(),i(n)})},i=async n=>{try{const s={method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}},c=await fetch(`http://localhost:3000/api/v1/events/${n}`,s),d=document.createElement("p");d.className="errorp",c.status===403?d.textContent="You are not authorized to delete the event.":c.status===200?d.textContent="You successfully deleted the event.":d.textContent="Failed to delete the event.",e.innerHTML="",e.append(d)}catch(s){console.error("Error deleting event:",s.message);const c=document.createElement("p");c.textContent="An error occurred while deleting the event.",e.innerHTML="",e.append(c)}};t(),e.append(a)},$=()=>{localStorage.getItem("token");const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.id="eventlist",e.innerHTML="Loading the events...",O(e),r.append(e)},O=async r=>{try{const a=await(await fetch("http://localhost:3000/api/v1/events/")).json(),t=document.createElement("div");t.id="listevent";const o=document.createElement("ul");a.forEach(i=>{const n=document.createElement("li");n.textContent=i.title,n.dataset.id=i._id,n.addEventListener("click",()=>{U(i._id,i)}),o.appendChild(n)}),t.appendChild(o),r.append(t)}catch(e){console.error("Error fetching events:",e.message),r.innerHTML="Failed to load events."}},U=async(r,e)=>{const a=localStorage.getItem("token");try{const o=await(await fetch(`http://localhost:3000/api/v1/events/${r}`,{method:"GET",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"}})).json();console.log(o),R(e)}catch(t){console.error("Error selecting event:",t.message)}},q=async()=>{try{const r=localStorage.getItem("token");if(!r)throw new Error("No logged-in user found");const e=await fetch("http://localhost:3000/api/v1/users/",{method:"GET",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!e.ok)throw new Error(`Failed to fetch user: ${e.statusText}`);return(await e.json()).map(t=>({name:t.name,id:t._id}))}catch(r){return console.error("Error fetching user:",r.message),null}},R=async r=>{try{const e=await q();if(!e)throw new Error("Failed to fetch logged-in user details");const a=document.createElement("div");a.id="eventCreateDiv";const t=document.createElement("form");t.id="eventForm";const o=document.createElement("input");o.type="hidden",o.id="id",o.name="id",o.value=r._id,t.appendChild(o);const i=document.createElement("label");i.setAttribute("for","title"),i.textContent="Title:",t.appendChild(i);const n=document.createElement("input");n.type="text",n.id="title",n.name="title",n.required=!0,n.value=r.title,t.appendChild(n);const s=document.createElement("label");s.setAttribute("for","date"),s.textContent="Date:",t.appendChild(s);const c=document.createElement("input");c.type="date",c.id="date",c.name="date",c.required=!0,c.value=r.date,t.appendChild(c);const d=document.createElement("label");d.setAttribute("for","location"),d.textContent="Location:",t.appendChild(d);const l=document.createElement("input");l.type="text",l.id="location",l.name="location",l.required=!0,l.value=r.location,t.appendChild(l);const u=document.createElement("label");u.setAttribute("for","description"),u.textContent="Description:",t.appendChild(u);const p=document.createElement("textarea");p.id="description",p.name="description",p.required=!0,p.textContent=r.description,t.appendChild(p);const m=document.createElement("label");m.setAttribute("for","eventimg"),m.textContent="Event Images:",t.appendChild(m);const h=document.createElement("input");h.type="file",h.id="eventimg",h.name="eventimg",h.multiple=!0,t.appendChild(h);const y=document.createElement("p");y.textContent="if you want to add any eventorganizer please select from the list if  you dont want please select your name itself",y.className="inform",y.style.color="blue",t.appendChild(y);const b=document.createElement("label");b.setAttribute("for","eventorganizer"),b.textContent="Event Organizer:",t.appendChild(b);const f=document.createElement("select");f.id="eventorganizer",f.name="eventorganizer",e.forEach(g=>{const E=document.createElement("option");E.textContent=g.name,E.value=g.id,f.appendChild(E)}),t.appendChild(f);const v=document.createElement("input");v.type="hidden",v.id="eventorganizerHidden",v.name="eventorganizer",v.value=JSON.stringify([e[0].id]),t.appendChild(v),f.addEventListener("change",g=>{const E=g.target.value;v.value=JSON.stringify([E]),console.log("Selected event organizer:",v.value)});const C=document.createElement("button");C.type="submit",C.id="submitEventButton",C.textContent="Update",t.appendChild(C),a.appendChild(t);const x=document.createElement("div");x.id="messageevent",a.appendChild(x);const S=document.querySelector("#app");S.innerHTML="",S.appendChild(a),t.addEventListener("submit",async g=>{g.preventDefault(),await _(r._id,r)})}catch(e){console.error("Error populating form:",e.message);const a=document.querySelector("#app"),t=document.createElement("div");t.textContent="Failed to populate form: "+e.message,t.style.color="red",a.appendChild(t)}},_=async(r,e)=>{const a=document.querySelector("#eventForm");if(!a){console.error("Form not found");return}const t=new FormData(a);let o=t.get("eventorganizer");console.log("Initial eventorganizer value:",o);try{const s=[o];console.log("Parsed event organizer:",s),t.set("eventorganizer",JSON.stringify(s))}catch(s){console.error("Error parsing event organizer:",s.message);return}for(let s of t.entries())console.log(`${s[0]}: ${s[1]}`);const i=localStorage.getItem("token");if(!i){console.error("No token found in localStorage");return}const n={method:"PUT",body:t,headers:{Authorization:`Bearer ${i}`}};try{const s=await fetch(`http://localhost:3000/api/v1/events/${r}`,n),c=document.querySelector("#messageevent");if(c.innerHTML="",!s.ok){if(s.headers.get("content-type").includes("application/json")){const u=await s.json();if(console.log("Error data:",u),s.status===400){const p=document.createElement("p");p.classList.add("error"),p.textContent="Bad request. Please check your data. Unable to update the event.",p.style.color="red",c.appendChild(p)}else if(s.status===401||s.status===403){const p=document.createElement("p");p.classList.add("error"),p.textContent="You are not authorized to perform this action.",p.style.color="red",c.appendChild(p)}}else{const u=document.createElement("p");u.classList.add("error"),u.textContent=`Unexpected error: ${s.status}`,u.style.color="red",c.appendChild(u)}return}const d=await s.json();console.log("Final response:",d);const l=document.createElement("p");l.className="messageCustomer",l.textContent=`You have successfully updated the event: ${d.title}`,c.appendChild(l)}catch(s){console.error("Error updating event:",s.message)}},J=async()=>{localStorage.getItem("token");const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="updatediv";const a=document.createElement("p");a.textContent="Loading all users",e.appendChild(a);try{const t=await q(),o=document.createElement("select"),i=document.createElement("option");i.textContent="Please select user",i.value="",i.disabled=!0,i.selected=!0,o.appendChild(i);for(const n of t){const s=document.createElement("option");s.textContent=n.name,s.value=n.id,o.appendChild(s)}o.addEventListener("change",n=>{n.preventDefault();const s=n.target.options[n.target.selectedIndex];Y(s.value,s.textContent)}),e.appendChild(o),r.appendChild(e)}catch(t){console.error("Error fetching user details:",t.message);const o=document.createElement("p");o.textContent="Failed to load users. Please try again later.",o.style.color="red",e.appendChild(o),r.appendChild(e)}},Y=async(r,e)=>{console.log("enterd into the populateuser");const a=document.createElement("div");a.innerHTML=`
    <form id="userForm">
      <div>
        <!-- Username input field -->
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" value="${e}" readonly />

        <!-- Hidden event ID input field -->
        <input type="hidden" id="eventid" name="eventid" value="${r}" />

        <!-- Role select dropdown -->
        <label for="role">Select Role:</label>
        <select name="role" id="role">
          <option value="" disabled selected>Select role</option>
          <option value="staff">Staff</option>
          <option value="organizer">Organizer</option>
        </select>

        <!-- Submit button -->
        <button type="submit" id="submitUserButton">Submit</button>
      </div>
    </form>
  `;const t=document.createElement("p");t.className="errormessage";const o=a.querySelector("#userForm");o.addEventListener("submit",async n=>{n.preventDefault();const s=new FormData(o),c=s.get("eventid");await G(s,c)});const i=document.querySelector("#app");i.innerHTML="",i.appendChild(a),i.append(t)},G=async(r,e)=>{const a=localStorage.getItem("token"),t={method:"PUT",body:JSON.stringify(Object.fromEntries(r)),headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}},o=document.querySelector(".errormessage");try{const i=await fetch(`http://localhost:3000/api/v1/users/${e}`,t);i.status==400&&(o.textContent="invalid role "),i.status==200&&(o.textContent="you successfully change the role of the selected user")}catch(i){console.error("Error submitting form:",i.message)}},V=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="admin_function",e.innerHTML=`
  <button id="createEventButton" class="adminButton">Create Event</button>
  <button id="updateEventButton" class="adminButton">Update Event</button>
  <button id="updateUserRoleButton" class="adminButton">Update User Role</button>
  <button id="deleteEventButton" class="adminButton">Delete Event</button>
  <button id="getAttendeesButton" class="adminButton">Get Attendees</button>
  <button id="deleteAttendeesButton" class="adminButton">Delete Attendees</button>
`,r.append(e),document.getElementById("createEventButton").addEventListener("click",z),document.getElementById("updateEventButton").addEventListener("click",$),document.getElementById("updateUserRoleButton").addEventListener("click",J),document.getElementById("deleteEventButton").addEventListener("click",P),document.getElementById("getAttendeesButton").addEventListener("click",B),document.getElementById("deleteAttendeesButton").addEventListener("click",M)},D=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="logindiv",e.innerHTML=`
  <form id="loginForm">
   <label for="email">Email:</label>
      <input type="email" id="email" name="email" placeholder="Enter your email" required>
       <label for="password">Password:</label>
      <input type="password" id="password" name="password" placeholder="Enter your password" required>
       <button type="submit" id="userlogin">Login</button>
    </form>
    <div id="messageLogin"></div>`,r.appendChild(e);const a=document.querySelector("#loginForm"),t=document.querySelector("#messageLogin");a.addEventListener("submit",async o=>{o.preventDefault(),await K(a,t)})},K=async(r,e)=>{const a=new FormData(r),t=Object.fromEntries(a.entries()),o=JSON.stringify(t);console.log("Sending data:",o);const n=await fetch("http://localhost:3000/api/v1/users/login",{method:"POST",body:o,headers:{"Content-Type":"application/json"}});if(e.innerHTML="",console.log("Response status:",n.status),n.status===400){const d=await n.json();console.error("Error data:",d);const l=document.createElement("p");l.classList.add("error"),l.textContent="email o password is incorrect.",l.style.color="red",e.appendChild(l);return}const s=await n.json();console.log("Response data:",s),localStorage.setItem("token",s.token),localStorage.setItem("user",JSON.stringify(s.user)),document.querySelector("header").remove(),w();const c=s.user.role;if(console.log(c),c==="organizer"){const d=document.querySelector("#app");d.innerHTML="";const l=document.createElement("div");l.className="welcomelog";const u=document.createElement("p"),p=document.createElement("span");p.textContent=`${s.user.name}`,p.style.color="blue",u.textContent="welcome ",u.appendChild(p),u.appendChild(document.createTextNode(" please click on the admin button")),l.appendChild(u),d.append(l);const m=L("admin",document.body);m.className="admin_button",m.addEventListener("click",h=>{h.preventDefault(),V()})}if(c==="staff"){const d=document.querySelector("#app");d.innerHTML="";const l=document.createElement("div");l.className="welcomelog";const u=document.createElement("p"),p=document.createElement("span");p.textContent=`${s.user.name}`,p.style.color="blue",u.textContent="welcome ",u.appendChild(p),u.appendChild(document.createTextNode("you are only staff of this event you cant make any update  ")),l.appendChild(u),d.append(l)}},W=()=>{const r=document.querySelector("#app");r.innerHTML="";const e=document.createElement("div");e.className="registerdiv",e.innerHTML=`
    <form id="registerForm">
      <label for="name">Name:</label>
      <input type="text" id="name" name="name" placeholder="Enter your name" required>
      
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" placeholder="Enter your email" required>
      
      <label for="password">Password:</label>
      <input type="password" id="password" name="password" placeholder="Enter your password" required>
      
      <label for="confirmPassword">Confirm Password:</label>
      <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" required>
      
      <button type="submit" id="userregister">Register</button>
    </form>
    <div id="messageContainer"></div>
  `,r.appendChild(e);const a=document.querySelector("#registerForm"),t=document.querySelector("#messageContainer");a.addEventListener("submit",async o=>{o.preventDefault(),await Q(a,t)})},Q=async(r,e)=>{const a=new FormData(r),t=Object.fromEntries(a.entries());if(t.password!==t.confirmPassword){e.innerHTML="";const d=document.createElement("p");d.classList.add("error"),d.textContent="Passwords do not match.",d.style.color="red",e.appendChild(d);return}const o=JSON.stringify(t);console.log("Sending data:",o);const n=await fetch("http://localhost:3000/api/v1/users/",{method:"POST",body:o,headers:{"Content-Type":"application/json"}});if(e.innerHTML="",console.log("Response status:",n.status),n.status===400){const d=await n.json();console.error("Error data:",d);const l=document.createElement("p");l.classList.add("error"),l.textContent="Bad request. Please check your data.",l.style.color="red",e.appendChild(l);return}if(n.status===409){const d=document.createElement("p");d.classList.add("error"),d.textContent="Email already registered.",d.style.color="red",e.appendChild(d);return}const s=await n.json();console.log("Response data:",s);const c=document.createElement("p");c.className="messageCustomer",c.textContent="You have successfully registered.",e.appendChild(c)},X=[{texto:"Home",url:"#home",page:N},{texto:"Events",url:"#events",page:H},{texto:"Register",url:"#register",page:W},{texto:"Login",url:"#login",page:D}],w=()=>{const r=document.createElement("header");r.className="headercontainer";const e=document.createElement("img");e.className="logo",e.src="./assets/logo.png",r.appendChild(e);const a=document.createElement("nav"),t=document.createElement("ul");t.className="ulcontainer";for(const o of X){const i=document.createElement("li");i.className="pages";const n=document.createElement("a");n.href=o.url,n.textContent=o.texto,n.textContent.toLowerCase()==="home"&&n.classList.add("active"),o.texto.toLowerCase()==="login"?localStorage.getItem("token")?(n.textContent="Logout",n.addEventListener("click",()=>{var s;localStorage.clear(),n.textContent="Login",(s=document.querySelector(".admin_button"))==null||s.remove(),w(),window.location.reload()})):n.addEventListener("click",()=>{D()}):n.addEventListener("click",s=>{s.preventDefault(),document.querySelectorAll(".pages a").forEach(c=>{c.classList.remove("active")}),n.classList.add("active"),typeof o.page=="function"&&o.page()}),i.appendChild(n),t.appendChild(i)}return a.appendChild(t),r.appendChild(a),document.body.appendChild(r),r},Z=document.querySelector("#app");Z.innerHTML="";w();N();
